{"version":3,"sources":["components/Header.tsx","components/About.tsx","components/Resume.tsx","components/Portfolio.tsx","components/ContactUs.tsx","components/Footer.tsx","resumeData.js","App.tsx","serviceWorker.js","index.tsx"],"names":["Header","props","resumeData","react_default","a","createElement","Fragment","id","style","backgroundColor","className","href","title","color","name","fontFamily","role","roleDescription","socialLinks","map","item","key","url","target","aria-hidden","About","src","alt","aboutme","address","website","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","GPA","Coursework","Awards","Activities","work","CompanyName","MonthOfLeaving","YearOfLeaving","Bullet2","Bullet3","Bullet4","skillsDescription1","skillsDescription2","Portfolio","portfolio","concat","link","imgurl","description","ContactUs","linkedinId","Footer","imagebaseurl","skypeid","Bullet1","skills","skillname","testimonials","App","Header_Header","About_About","Resume_Resume","Portfolio_Portfolio","ContactUs_ContactUs","Footer_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6d8886d.chunk.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport \"./Header.css\";\ninterface Data {\n  resumeData: {\n    imagebaseurl: string;\n    name: string;\n    role: string;\n    linkedinId: string;\n    skypeid: string;\n    roleDescription: string;\n    socialLinks: {\n      name: string;\n      url: string;\n      className: string;\n    }[];\n    aboutme: string;\n    address: string;\n    website: string;\n    education: {\n      UniversityName: string;\n      specialization: string;\n      MonthOfPassing: string;\n      YearOfPassing: string;\n      GPA: string;\n      Coursework: string;\n      Awards: string;\n      Activities: string;\n    }[];\n    work: {\n      CompanyName: string;\n      specialization: string;\n      MonthOfLeaving: string;\n      YearOfLeaving: string;\n      Bullet1: string;\n      Bullet2: string;\n      Bullet3: string;\n      Bullet4: string;\n    }[];\n    skillsDescription1: string;\n    skillsDescription2: string;\n\n    skills: {\n      skillname: string;\n    }[];\n    portfolio: {\n      name: string;\n      description: string;\n      imgurl: string;\n      link: string;\n    }[];\n    testimonials: {\n      description: string;\n      name: string;\n    }[];\n  };\n}\n\nexport const Header: FunctionComponent<Data> = (props) => {\n  const resumeData = props.resumeData;\n  return (\n    <React.Fragment>\n      <header id=\"home\" style={{ backgroundColor: \"white\" }}>\n        <nav id=\"nav-wrap\">\n          <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n            Show navigation\n          </a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">\n            Hide navigation\n          </a>\n          <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\">\n              <a className=\"smoothscroll\" href=\"#home\">\n                Home\n              </a>\n            </li>\n            <li>\n              <a\n                className=\"smoothscroll\"\n                style={{ color: \"black\" }}\n                href=\"#about\"\n              >\n                About\n              </a>\n            </li>\n            <li>\n              <a\n                className=\"smoothscroll\"\n                style={{ color: \"black\" }}\n                href=\"#resume\"\n              >\n                Resume\n              </a>\n            </li>\n            <li>\n              <a\n                className=\"smoothscroll\"\n                style={{ color: \"black\" }}\n                href=\"#portfolio\"\n              >\n                Projects\n              </a>\n            </li>\n\n            <li>\n              <a\n                className=\"smoothscroll\"\n                style={{ color: \"black\" }}\n                href=\"#contact\"\n              >\n                Contact\n              </a>\n            </li>\n          </ul>\n        </nav>\n\n        <div className=\"row banner\">\n          <div className=\"banner-text\">\n            <h1 className=\"responsive-headline\" style={{ color: \"#000\" }}>\n              I am {resumeData.name}.\n            </h1>\n            <h3 style={{ color: \"#000\", fontFamily: \"sans-serif \" }}>\n              I am a {resumeData.role}.{resumeData.roleDescription}\n            </h3>\n            <hr style={{ color: \"black\" }} />\n            <ul className=\"social\">\n              {resumeData.socialLinks &&\n                resumeData.socialLinks.map((item) => {\n                  return (\n                    <li key={item.name}>\n                      <a href={item.url} target=\"_blank\">\n                        <i className={item.className} aria-hidden={true}></i>\n                      </a>\n                    </li>\n                  );\n                })}\n            </ul>\n          </div>\n        </div>\n\n        <p className=\"scrolldown\">\n          <a className=\"smoothscroll\" href=\"#about\">\n            <i className=\"icon-down-circle\"></i>\n          </a>\n        </p>\n      </header>\n    </React.Fragment>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\n\ninterface Data {\n  resumeData: {\n    imagebaseurl: string;\n    name: string;\n    role: string;\n    linkedinId: string;\n    skypeid: string;\n    roleDescription: string;\n    socialLinks: {\n      name: string;\n      url: string;\n      className: string;\n    }[];\n    aboutme: string;\n    address: string;\n    website: string;\n    education: {\n      UniversityName: string;\n      specialization: string;\n      MonthOfPassing: string;\n      YearOfPassing: string;\n      GPA: string;\n      Coursework: string;\n      Awards: string;\n      Activities: string;\n    }[];\n    work: {\n      CompanyName: string;\n      specialization: string;\n      MonthOfLeaving: string;\n      YearOfLeaving: string;\n      Bullet1: string;\n      Bullet2: string;\n      Bullet3: string;\n      Bullet4: string;\n    }[];\n    skillsDescription1: string;\n    skillsDescription2: string;\n\n    skills: {\n      skillname: string;\n    }[];\n    portfolio: {\n      name: string;\n      description: string;\n      imgurl: string;\n      link: string;\n    }[];\n    testimonials: {\n      description: string;\n      name: string;\n    }[];\n  };\n}\n\nexport const About: FunctionComponent<Data> = (props) => {\n  const resumeData = props.resumeData;\n  return (\n    <section id=\"about\" style={{ backgroundColor: \"white\" }}>\n      <div className=\"row\">\n        <div className=\"three columns\">\n          <img className=\"profile-pic\" src=\"images/profilepic.jpg\" alt=\"\" />\n        </div>\n\n        <div className=\"nine columns main-col\">\n          <h2>About Me</h2>\n          <p>{resumeData.aboutme}</p>\n\n          <div className=\"row\">\n            <div className=\"columns contact-details\">\n              <h2>Contact Details</h2>\n              <p className=\"address\">\n                <span>{resumeData.name}</span>\n                <br></br>\n                <span>{resumeData.address}</span>\n                <br></br>\n                <span>{resumeData.website}</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\n\ninterface Data {\n  resumeData: {\n    imagebaseurl: string;\n    name: string;\n    role: string;\n    linkedinId: string;\n    skypeid: string;\n    roleDescription: string;\n    socialLinks: {\n      name: string;\n      url: string;\n      className: string;\n    }[];\n    aboutme: string;\n    address: string;\n    website: string;\n    education: {\n      UniversityName: string;\n      specialization: string;\n      MonthOfPassing: string;\n      YearOfPassing: string;\n      GPA: string;\n      Coursework: string;\n      Awards: string;\n      Activities: string;\n    }[];\n    work: {\n      CompanyName: string;\n      specialization: string;\n      MonthOfLeaving: string;\n      YearOfLeaving: string;\n      Bullet1: string;\n      Bullet2: string;\n      Bullet3: string;\n      Bullet4: string;\n    }[];\n    skillsDescription1: string;\n    skillsDescription2: string;\n\n    skills: {\n      skillname: string;\n    }[];\n    portfolio: {\n      name: string;\n      description: string;\n      imgurl: string;\n      link: string;\n    }[];\n    testimonials: {\n      description: string;\n      name: string;\n    }[];\n  };\n}\nexport const Resume: FunctionComponent<Data> = (props) => {\n  const resumeData = props.resumeData;\n  return (\n    <section id=\"resume\">\n      <div className=\"row education\">\n        <div className=\"three columns header-col\">\n          <h1>\n            <span>Education</span>\n          </h1>\n        </div>\n\n        <div className=\"nine columns main-col\">\n          {resumeData.education &&\n            resumeData.education.map((item) => {\n              return (\n                <div className=\"row item\">\n                  <div className=\"twelve columns\">\n                    <h3>{item.UniversityName}</h3>\n                    <p className=\"info\">\n                      {item.specialization}\n                      <span>&bull;</span>{\" \"}\n                      <em className=\"date\">\n                        {item.MonthOfPassing} {item.YearOfPassing}\n                      </em>\n                    </p>\n                    <p>{item.GPA}</p>\n\n                    <p>{item.Coursework}</p>\n                    <p>{item.Awards}</p>\n                    <p>{item.Activities}</p>\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n      <div className=\"row work\">\n        <div className=\"three columns header-col\">\n          <h1>\n            <span>Work</span>\n          </h1>\n        </div>\n\n        <div className=\"nine columns main-col\">\n          {resumeData.work &&\n            resumeData.work.map((item) => {\n              return (\n                <div className=\"row item\">\n                  <div className=\"twelve columns\">\n                    <h3>{item.CompanyName}</h3>\n                    <p className=\"info\">\n                      {item.specialization}\n                      <span>&bull;</span>{\" \"}\n                      <em className=\"date\">\n                        {item.MonthOfLeaving} {item.YearOfLeaving}\n                      </em>\n                    </p>\n                    <p></p>\n                    <p>{item.Bullet2}</p>\n                    <p>{item.Bullet3}</p>\n                    <p>{item.Bullet4}</p>\n                    <p>{/* {item.Bullet5} */}</p>\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n\n      <div className=\"row skill\">\n        <div className=\"three columns header-col\">\n          <h1>\n            <span>Skills</span>\n          </h1>\n        </div>\n\n        <div className=\"nine columns main-col\">\n          <p>{resumeData.skillsDescription1}</p>\n          <p>{resumeData.skillsDescription2}</p>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\n\ninterface Data {\n  resumeData: {\n    imagebaseurl: string;\n    name: string;\n    role: string;\n    linkedinId: string;\n    skypeid: string;\n    roleDescription: string;\n    socialLinks: {\n      name: string;\n      url: string;\n      className: string;\n    }[];\n    aboutme: string;\n    address: string;\n    website: string;\n    education: {\n      UniversityName: string;\n      specialization: string;\n      MonthOfPassing: string;\n      YearOfPassing: string;\n      GPA: string;\n      Coursework: string;\n      Awards: string;\n      Activities: string;\n    }[];\n    work: {\n      CompanyName: string;\n      specialization: string;\n      MonthOfLeaving: string;\n      YearOfLeaving: string;\n      Bullet1: string;\n      Bullet2: string;\n      Bullet3: string;\n      Bullet4: string;\n    }[];\n    skillsDescription1: string;\n    skillsDescription2: string;\n\n    skills: {\n      skillname: string;\n    }[];\n    portfolio: {\n      name: string;\n      description: string;\n      imgurl: string;\n      link: string;\n    }[];\n    testimonials: {\n      description: string;\n      name: string;\n    }[];\n  };\n}\n\nexport const Portfolio: FunctionComponent<Data> = (props) => {\n  const resumeData = props.resumeData;\n  return (\n    <section id=\"portfolio\">\n      <div className=\"row\">\n        <div className=\"twelve columns collapsed\">\n          <h1>Check Out Some of My Works.</h1>\n          <div\n            id=\"portfolio-wrapper\"\n            className=\"bgrid-quarters s-bgrid-thirds cf\"\n          >\n            {resumeData.portfolio &&\n              resumeData.portfolio.map((item) => {\n                return (\n                  <a href={`${item.link}`}>\n                    <div className=\"columns portfolio-item\">\n                      <div className=\"item-wrap\">\n                        <img\n                          src={`${item.imgurl}`}\n                          className=\"item-img\"\n                          alt=\"\"\n                        />\n                        <div className=\"overlay\">\n                          <div className=\"portfolio-item-meta\">\n                            <h5>{item.name}</h5>\n                            <p>{item.description}</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </a>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\ninterface Data {\n  resumeData: {\n    imagebaseurl: string;\n    name: string;\n    role: string;\n    linkedinId: string;\n    skypeid: string;\n    roleDescription: string;\n    socialLinks: {\n      name: string;\n      url: string;\n      className: string;\n    }[];\n    aboutme: string;\n    address: string;\n    website: string;\n    education: {\n      UniversityName: string;\n      specialization: string;\n      MonthOfPassing: string;\n      YearOfPassing: string;\n      GPA: string;\n      Coursework: string;\n      Awards: string;\n      Activities: string;\n    }[];\n    work: {\n      CompanyName: string;\n      specialization: string;\n      MonthOfLeaving: string;\n      YearOfLeaving: string;\n      Bullet1: string;\n      Bullet2: string;\n      Bullet3: string;\n      Bullet4: string;\n    }[];\n    skillsDescription1: string;\n    skillsDescription2: string;\n\n    skills: {\n      skillname: string;\n    }[];\n    portfolio: {\n      name: string;\n      description: string;\n      imgurl: string;\n      link: string;\n    }[];\n    testimonials: {\n      description: string;\n      name: string;\n    }[];\n  };\n}\n\nexport const ContactUs: FunctionComponent<Data> = (props) => {\n  let resumeData = props.resumeData;\n  return (\n    <section id=\"contact\">\n      <div className=\"row section-head\">\n        <div className=\"ten columns\">\n          <p className=\"lead\">\n            Feel free to contact me for any work or suggestions below\n          </p>\n        </div>\n      </div>\n      <div className=\"row\">\n        <aside className=\"eigth columns footer-widgets\">\n          <div className=\"widget\">\n            <h4>{resumeData.linkedinId}</h4>\n          </div>\n        </aside>\n      </div>\n    </section>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\n\ninterface Data {\n  resumeData: {\n    imagebaseurl: string;\n    name: string;\n    role: string;\n    linkedinId: string;\n    skypeid: string;\n    roleDescription: string;\n    socialLinks: {\n      name: string;\n      url: string;\n      className: string;\n    }[];\n    aboutme: string;\n    address: string;\n    website: string;\n    education: {\n      UniversityName: string;\n      specialization: string;\n      MonthOfPassing: string;\n      YearOfPassing: string;\n      GPA: string;\n      Coursework: string;\n      Awards: string;\n      Activities: string;\n    }[];\n    work: {\n      CompanyName: string;\n      specialization: string;\n      MonthOfLeaving: string;\n      YearOfLeaving: string;\n      Bullet1: string;\n      Bullet2: string;\n      Bullet3: string;\n      Bullet4: string;\n    }[];\n    skillsDescription1: string;\n    skillsDescription2: string;\n\n    skills: {\n      skillname: string;\n    }[];\n    portfolio: {\n      name: string;\n      description: string;\n      imgurl: string;\n      link: string;\n    }[];\n    testimonials: {\n      description: string;\n      name: string;\n    }[];\n  };\n}\nexport const Footer: FunctionComponent<Data> = (props) => {\n  const resumeData = props.resumeData;\n  return (\n    <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {resumeData.socialLinks &&\n              resumeData.socialLinks.map((item) => {\n                return (\n                  <li>\n                    <a href={item.url}>\n                      <i className={item.className} />\n                    </a>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n        <div id=\"go-top\">\n          <a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\n            <i className=\"icon-up-open\" />\n          </a>\n        </div>\n      </div>\n    </footer>\n  );\n};\n","let resumeData = {\n  imagebaseurl: \"https://jrimyak.github.io/Portfolio/\",\n  name: \"Jake Imyak\",\n  role: \"Full Stack Developer\",\n  linkedinId: \"Phone: 847-912-1914 - Email: imyakjake@gmail.com\",\n  skypeid: \"Your skypeid\",\n  roleDescription:\n    \" I love to create, build, and lead for any type of computer science project. My curiosity and positivity allows me to learn and try a multiude of different things related to computer sciece.\",\n  socialLinks: [\n    {\n      name: \"linkedin\",\n      url: \"https://www.linkedin.com/in/jacob-imyak/\",\n      className: \"fa fa-linkedin\",\n    },\n    {\n      name: \"github\",\n      url: \"https://github.com/jrimyak\",\n      className: \"fa fa-github\",\n    },\n    {\n      name: \"skype\",\n      url: \"https://www.instagram.com/jakeimyak/\",\n      className: \"fa fa-instagram\",\n    },\n  ],\n  aboutme:\n    \" Hi, my name is Jake Imyak and I am a computer scientist from the Chicagoland area. I am currently majoring in Computer Science and Engineering with a minor in Mathematics from the Ohio State University. I interned at 84.51° working as a data engineer attempting to allow CPGs to gain insights on their various marketing campaigns. Also, I love artisan coffee, running, and spending time with friends!\",\n  address: \"58 E Fabish Drive Buffalo Grove, IL\",\n  website: \"https://jrimyak.github.io/Portfolio/\",\n  education: [\n    {\n      UniversityName: \"Ohio State University, College of Engineering\",\n      specialization:\n        \"Major: Computer Science and Engineering & Minor: Mathematics\",\n      MonthOfPassing: \"Expected Graduation: May\",\n      YearOfPassing: \"2022\",\n      GPA: \"GPA: 3.778/4.00\",\n      Coursework:\n        \"Coursework: Data Structures & Algorithms, Natural Language Processing, Survey of AI, Quantitative Neuroscience\",\n      Awards:\n        \"Awards: Trustees Scholarship, National Buckeye Scholar, Huskie Hack 1st Prize (2017), Hack Ridge 2nd Place and Best Overall Design (2018), Dean’s List (AU 18, SP 19, AU 19, SP 20, AU 20, SP 21)\",\n      Activities:\n        \"Activities: Coffee Roasting Club (President), Survey of AI Teaching Assistant, Undergraduate Student Government (Committee Representative), D3 - Design, Develop, Deploy (Accelerator Team Leader)\",\n    },\n  ],\n  work: [\n    {\n      CompanyName: \"84.51°\",\n      specialization: \"Software Engineer Intern\",\n      MonthOfLeaving: \"June 2021 - \",\n      YearOfLeaving: \"August 2021\",\n      Bullet1:\n        \"● Built out an Azure SAS Token Service in Java Spring to enhance security for access to blob storage in the cloud and implemented an auditing functionality to store data in mongoDB to track metrics regarding the services\",\n      Bullet2:\n        \"● Enhanced existing data ingestion services by improving NiFi flows and optimizing existing Python plugins\",\n      Bullet3:\n        \"● Designed and developed a full stack service health dashboard utilizing Go & Prometheus to process metrics and React & Grafana to create a panel plugin maintaining UI/UX standards and added functionality to display data\",\n      Bullet4: \"\",\n    },\n    {\n      CompanyName: \"84.51°\",\n      specialization: \"Software Engineer Intern\",\n      MonthOfLeaving: \"May 2020 - \",\n      YearOfLeaving: \"July 2020\",\n      Bullet1:\n        \"● Designed and implemented big data processing pipelines utilizing Python, Apache Spark, and the Google Cloud Platform to create advertising campaign metrics such as sales uplift and live ad attributed sales\",\n      Bullet2:\n        \"● Researched and provided a recommendation for the switch to The Trade Desk as an ad performance data source\",\n      Bullet3:\n        \"● Built a Flask microservice using the Pivotal Cloud Foundry API and GitHub’s GraphQL API to identify waste\",\n      Bullet4:\n        \"● Worked in a cross functional team with Project Managers, Data Engineers, Software Engineers, and Data Scientists to support the growth of the Prism platform and Kroger Precision Marketing\",\n    },\n    {\n      CompanyName: \"BuzzU\",\n      specialization: \"Founder/Lead Data Engineer\",\n      MonthOfLeaving: \"March 2021 - \",\n      YearOfLeaving: \"Present\",\n      Bullet1:\n        \"● Founded a startup leveraging machine learning to predict the marketability of college athletes for endorsements\",\n      Bullet2:\n        \"● Set up data pipelines to process data through a SVM using Pandas and sklearn to create scores for each athlete\",\n      Bullet3:\n        \"● Created a React dashboard for data visualization and a Flask middleware service to get the data from mongoDB\",\n      Bullet4:\n        \"● Set up a weekly cadence of agile-based development with establishing a positive, optimistic work environment\",\n    },\n  ],\n  skillsDescription1:\n    \"Languages: Java, Python, C, Javascript, HTML5, CSS3, Ruby, MatLab, and Swift\",\n  skillsDescription2:\n    \"Tools: mongoDB, Firebase, AWS, Bootstrap, Material Design, React, Redux, Flask, Spark, Rails, and Git\",\n  skills: [\n    {\n      skillname: \"HTML5\",\n    },\n    {\n      skillname: \"CSS\",\n    },\n    {\n      skillname: \"Reactjs\",\n    },\n  ],\n  portfolio: [\n    {\n      name: \"Mental Drive\",\n      description:\n        \"MentalDrive is an all-in-one app to help monitor someone with a mental disability. Mental Drive was awarded first overall prize at Northern Illinois Huskie Hack in 2017.\",\n      imgurl: \"images/portfolio/mentaldrive.jpg\",\n      link: \"https://devpost.com/software/mentaldrive\",\n    },\n    {\n      name: \"Cardgenix\",\n      description:\n        \"Cardgenix was a project developed at Hack Ohio in 2020 with Kriti Chawla, Josh Ison, and Jacob Rosenber. I worked on the React Native front end and python project to create cartoons.\",\n      imgurl: \"images/portfolio/darkgreen01.png\",\n      link: \"https://github.com/jrimyak/HackOhioFrontend/\",\n    },\n    {\n      name: \"ARBody\",\n      description:\n        \"2nd overall prize and best design winner at HackRidge 2018. Built out a native iOS app using Swift to curb obesity integrating augmented reality to preview meals. I integrated the NutritionIX API to track caloric intake and created interactive graphs to visualize progress\",\n      imgurl: \"images/portfolio/arbody.jpg\",\n      link:\n        \"https://www.hackerearth.com/challenges/hackathon/hack-ridge-20/dashboard/f7b3149/submission/\",\n    },\n    {\n      name: \"ACTalented\",\n      description:\n        \"ACT Practice App published to the iOS App Store in January 2017. Contains practice tests, profile analytics, and tutorials. The app has over 6,000 downloads and is growing rapidly. The app has allowed for free tutoring that helps all students who need help but may not have the resources to learn how to take the test.\",\n      imgurl: \"images/portfolio/act.jpg\",\n      link:\n        \"https://apps.apple.com/us/app/actalented-act-practice-tests/id1202591036\",\n    },\n  ],\n  testimonials: [\n    {\n      description: \"This is a sample testimonial\",\n      name: \"Some technical guy\",\n    },\n    {\n      description: \"This is a sample testimonial\",\n      name: \"Some technical guy\",\n    },\n  ],\n};\n\nexport default resumeData;\n","import React, { Component } from \"react\";\nimport { Header } from \"./components/Header\";\nimport { About } from \"./components/About\";\nimport { Resume } from \"./components/Resume\";\nimport { Portfolio } from \"./components/Portfolio\";\nimport { Testimonials } from \"./components/Testimonials\";\nimport { ContactUs } from \"./components/ContactUs\";\nimport { Footer } from \"./components/Footer\";\nimport resumeData from \"./resumeData\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData} />\n        <About resumeData={resumeData} />\n        <Resume resumeData={resumeData} />\n        <Portfolio resumeData={resumeData} />\n        <ContactUs resumeData={resumeData} />\n        <Footer resumeData={resumeData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}